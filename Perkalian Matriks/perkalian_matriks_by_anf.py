# -*- coding: utf-8 -*-
"""Perkalian Matriks by ANF

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12tQGbJYG8_TkmJj_NqVP7VZ2IRCLpKEb
"""

!pip install streamlit pyngrok --quiet

import streamlit as st
import numpy as np

def multiply_matrices(matrix_a, matrix_b):
    """Mengalikan dua matriks."""
    try:
        result = np.dot(matrix_a, matrix_b)
        return result
    except ValueError as e:
        st.error(f"Error dalam perkalian matriks: {e}")
        return None

def get_matrix_input(key_suffix, rows, cols):
    """Mendapatkan input matriks dari pengguna."""
    matrix = []
    for r in range(rows):
        cols_input = st.columns(cols)
        row_values = []
        for c in range(cols):
            try:
                value = cols_input[c].number_input(f"Baris {r+1}, Kolom {c+1}", key=f"matrix_{key_suffix}_{r}_{c}")
                row_values.append(float(value))
            except ValueError:
                st.warning(f"Masukkan angka valid untuk Baris {r+1}, Kolom {c+1}")
                return None
        matrix.append(row_values)
    return np.array(matrix)

st.set_page_config(layout="centered")
st.title("Kalkulator Perkalian Matriks")

st.write("""
Gunakan kalkulator ini untuk mengalikan dua matriks.
Pastikan jumlah kolom Matriks A sama dengan jumlah baris Matriks B.
""")

st.subheader("Matriks A")
col1, col2 = st.columns(2)
with col1:
    rows_a = st.number_input("Jumlah Baris Matriks A", min_value=1, value=2, step=1, key="rows_a")
with col2:
    cols_a = st.number_input("Jumlah Kolom Matriks A", min_value=1, value=2, step=1, key="cols_a")

st.write("Masukkan elemen untuk Matriks A:")
matrix_a_input = get_matrix_input("A", int(rows_a), int(cols_a))

st.subheader("Matriks B")
col3, col4 = st.columns(2)
with col3:
    rows_b = st.number_input("Jumlah Baris Matriks B", min_value=1, value=2, step=1, key="rows_b")
with col4:
    cols_b = st.number_input("Jumlah Kolom Matriks B", min_value=1, value=2, step=1, key="cols_b")

st.write("Masukkan elemen untuk Matriks B:")
matrix_b_input = get_matrix_input("B", int(rows_b), int(cols_b))

st.markdown("---")

if st.button("Hitung Perkalian"):
    if cols_a != rows_b:
        st.error("Untuk perkalian matriks, jumlah kolom Matriks A harus sama dengan jumlah baris Matriks B.")
    elif matrix_a_input is not None and matrix_b_input is not None:
        result_matrix = multiply_matrices(matrix_a_input, matrix_b_input)
        if result_matrix is not None:
            st.subheader("Hasil Perkalian Matriks (A x B):")
            st.success("Perhitungan berhasil!")
            st.dataframe(result_matrix) # Menggunakan st.dataframe untuk tampilan yang lebih baik
    else:
        st.warning("Mohon lengkapi semua input matriks dengan angka.")

st.markdown("---")
st.write("Dibuat dengan ❤️ oleh program Python")

!ngrok config add-authtoken 2uzt3zck7DsFcgSphPuyEpHgUiN_3gijm7UyXNThGByqVsBhA

from pyngrok import ngrok

# Jalankan streamlit sebagai background process
!streamlit run bmi_app.py &>/dev/null &

# Hubungkan ke Streamlit via ngrok (versi baru)
public_url = ngrok.connect(addr="8533", proto="http")
print("Aplikasi bisa diakses di link berikut:")
print(public_url)